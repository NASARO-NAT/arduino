Fa√ßa um Rubber Ducky com Arduino
#Seguran√ßa da informa√ß√£o

Fernando Schmitz
29/11/2023 13:58
Antes de come√ßar, gostaria de enfatizar a import√¢ncia da utiliza√ß√£o √©tica deste tipo de conhecimento para fins educacionais. Embora encoraje a explora√ß√£o e o aprendizado na √°rea da seguran√ßa cibern√©tica, lembre que √© crucial respeitar os limites √©ticos e legais. O acesso n√£o autorizado a sistemas, redes ou dados √© uma viola√ß√£o s√©ria. Recomendamos que todos os estudos e experimentos sejam realizados em ambientes controlados e com permiss√£o expl√≠cita. A √©tica e o respeito pelas leis s√£o fundamentais para garantir um uso respons√°vel do conhecimento hacker.
Voc√™ j√° ouviu falar sobre o Rubber Ducky? √â uma ferramenta que pode ser usada para realizar ataques cibern√©ticos, mas tamb√©m tem outros usos leg√≠timos. Neste artigo, vamos explorar o que √© o Rubber Ducky, como funciona e como fazer um utilizando um dispositivo compat√≠vel com Arduino.



O que √© o Rubber Ducky?
O Rubber Ducky √© um dispositivo USB disfar√ßado de um simples pen drive. Por√©m, por tr√°s dessa apar√™ncia inofensiva, ele esconde um poderoso arsenal de ataques cibern√©ticos. Ele √© programado para simular o comportamento de um teclado quando conectado a um computador. Isso significa que ele pode enviar comandos de teclado predefinidos em alta velocidade, permitindo a execu√ß√£o de a√ß√µes automatizadas.



Como funciona o Rubber Ducky?
O funcionamento do Rubber Ducky √© bastante simples. Quando conectado a um computador, ele se passa por um teclado USB e envia comandos pr√©-programados para a m√°quina. Esses comandos podem ser configurados de acordo com as necessidades do usu√°rio. Por exemplo, √© poss√≠vel programar o Rubber Ducky para abrir um prompt de comando e executar um c√≥digo malicioso que capture senhas ou realize outras atividades il√≠citas. No entanto, √© importante ressaltar que o Rubber Ducky tamb√©m pode ser usado para fins leg√≠timos, como automatizar tarefas repetitivas ou realizar testes de seguran√ßa.



Conhe√ßam o Digispark Attiny85


O Digispark Attiny85 √© um microcontrolador baseado no chip ATtiny85 da Atmel. Com um tamanho diminuto, √© not√°vel que este dispositivo embala uma quantidade significativa de funcionalidades em sua forma compacta. Possui entradas/sa√≠das digitais e anal√≥gicas, permitindo a execu√ß√£o de uma variedade de projetos, mesmo com suas dimens√µes reduzidas.





A Rela√ß√£o com o Arduino
Uma das caracter√≠sticas mais empolgantes do Digispark Attiny85 √© a sua compatibilidade com o ambiente de desenvolvimento Arduino. Isso significa que os entusiastas e desenvolvedores familiarizados com a plataforma Arduino podem facilmente adaptar seus projetos para funcionar com o Digispark.

A programa√ß√£o √© feita utilizando a IDE do Arduino, tornando a transi√ß√£o suave para aqueles que j√° t√™m experi√™ncia nesse ambiente. Com uma vasta biblioteca de c√≥digo dispon√≠vel, os projetos podem ser adaptados e estendidos facilmente.



Chega de papo‚Ä¶ quero ver o c√≥digo!
Primeiro Passo - Baixar e instalar o IDE Arduino
Acesse https://www.arduino.cc/en/software e baixe e instale vers√£o Legacy (1.8.x).
Segundo Passo - Instalar os Drivers do Digispark
Acesse o reposit√≥rio do Digispark em https://github.com/digistump/digistumparduino/releases
Fa√ßa o download do arquivo Digistump.Drivers.zip compat√≠vel com o seu sistema operacional.
Terceiro Passo - Configurar a IDE Arduino para o Digispark
Abra o Arduino IDE e v√° para File > Preferences > Additional boards manager URLs.
Cole o seguinte link: http://digistump.com/package_digistump_index.json.
Clique em OK.
Agora, instale as placas Digispark dentro do Arduino IDE, seguindo estas etapas:
V√° para Tools > Boards > Board Manager.
Utilize o filtro para procurar e selecione Digistump AVR Boards por Digistump e clique em instalar.
Para definir o Digispark como padr√£o no Arduino IDE, siga estas instru√ß√µes:
V√° para Tools > Boards > Digistump AVR Board > Digispark (Padr√£o - 16.5 MHz)
Caso tenha problemas para conectar seu Digispark, acesse: http://digistump.com/wiki/digispark/tutorials/connecting
Quarto Passo - Seu primeiro script Rubber Ducky
Crie um novo esbo√ßo com Arquivo > Novo esbo√ßo
Cole o seguinte c√≥digo:
#include ‚ÄúDigiKeyboard.h‚Äù
void setup() {
  // No setup scripting is required, but this function is needed
}
void loop() {
  // This is generally not necessary but with some older systems it seems to
  // prevent missing the first character after a delay:
  DigiKeyboard.sendKeyStroke(0);
  // Open a command prompt
  DigiKeyboard.sendKeyStroke(KEY_R, MOD_GUI_LEFT);
  DigiKeyboard.delay(500);
  DigiKeyboard.println(‚Äúcmd‚Äù);
  DigiKeyboard.delay(500);
  // Execute the following function in a command prompt
  DigiKeyboard.println(‚Äúecho Pwned by Redacted Information Security‚Äù);
  DigiKeyboard.delay(500);
  // Blink the red LED when the code has finished executing
  while (true)
  {
    digitalWrite(0, HIGH);
    digitalWrite(1, HIGH);
    delay(300);
    digitalWrite(0, LOW);
    digitalWrite(1, LOW);      
    delay(300);
  }
}
Clique em 'Verify' para garantir que o c√≥digo funcionar√°.
Clique em 'Upload' e conecte o Digispark quando for solicitado.
Assim que o c√≥digo for enviado, voc√™ est√° pronto! Divirta-se üòÇ.


√â s√≥ isso?
Voc√™ n√£o precisa parar por aqui. Visite o reposit√≥rio https://github.com/CedArctic/DigiSpark-Scripts e conhe√ßa uma infinidade de payloads que voc√™ pode utilizar em seus testes.



Conclus√£o
O Rubber Ducky √© um dispositivo poderoso que pode ser usado tanto para fins maliciosos quanto para fins leg√≠timos. √â importante estar ciente dos riscos associados ao uso dessa ferramenta e garantir que ela seja utilizada de forma √©tica. Para voc√™, como estudante de seguran√ßa da informa√ß√£o, o Rubber Ducky pode ser uma adi√ß√£o valiosa ao seu kit de ferramentas. No entanto, lembre-se sempre de agir dentro da lei e obter permiss√£o adequada antes de realizar testes de seguran√ßa em sistemas ou redes.



Refer√™ncias
Reposit√≥rio Digistump. Dispon√≠vel em https://github.com/digistump/DigistumpArduino. Acesso em 29/11/2023.

Connecting and Programming Your Digispark. Dispon√≠vel em http://digistump.com/wiki/digispark/tutorials/connecting. Acesso em 29/11/2023.

Reposit√≥rio DigiSpark-Scripts. Dispon√≠vel em https://github.com/CedArctic/DigiSpark-Scripts. Acesso em 29/11/2023.
